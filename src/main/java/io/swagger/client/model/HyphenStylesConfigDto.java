/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * HyphenStylesConfigDto
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2025-04-29T18:38:19.753+06:00")
public class HyphenStylesConfigDto   {
  @SerializedName("capitalizeAfterColon")
  private Boolean capitalizeAfterColon = null;

  @SerializedName("capitalizeAfterDash")
  private Boolean capitalizeAfterDash = null;

  @SerializedName("capitalizeAfterEllipsis")
  private Boolean capitalizeAfterEllipsis = null;

  /**
   * Gets or Sets dashStyle
   */
  public enum DashStyleEnum {
    @SerializedName("NONE")
    NONE("NONE"),
    
    @SerializedName("HYPHEN")
    HYPHEN("HYPHEN"),
    
    @SerializedName("EN_DASH")
    EN_DASH("EN_DASH"),
    
    @SerializedName("EM_DASH")
    EM_DASH("EM_DASH");

    private String value;

    DashStyleEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("dashStyle")
  private DashStyleEnum dashStyle = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("spaceAfterEllipsis")
  private Boolean spaceAfterEllipsis = null;

  @SerializedName("spaceBeforeEllipsis")
  private Boolean spaceBeforeEllipsis = null;

  @SerializedName("useCurlyApostrophes")
  private Boolean useCurlyApostrophes = null;

  public HyphenStylesConfigDto capitalizeAfterColon(Boolean capitalizeAfterColon) {
    this.capitalizeAfterColon = capitalizeAfterColon;
    return this;
  }

   /**
   * Get capitalizeAfterColon
   * @return capitalizeAfterColon
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getCapitalizeAfterColon() {
    return capitalizeAfterColon;
  }

  public void setCapitalizeAfterColon(Boolean capitalizeAfterColon) {
    this.capitalizeAfterColon = capitalizeAfterColon;
  }

  public HyphenStylesConfigDto capitalizeAfterDash(Boolean capitalizeAfterDash) {
    this.capitalizeAfterDash = capitalizeAfterDash;
    return this;
  }

   /**
   * Get capitalizeAfterDash
   * @return capitalizeAfterDash
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getCapitalizeAfterDash() {
    return capitalizeAfterDash;
  }

  public void setCapitalizeAfterDash(Boolean capitalizeAfterDash) {
    this.capitalizeAfterDash = capitalizeAfterDash;
  }

  public HyphenStylesConfigDto capitalizeAfterEllipsis(Boolean capitalizeAfterEllipsis) {
    this.capitalizeAfterEllipsis = capitalizeAfterEllipsis;
    return this;
  }

   /**
   * Get capitalizeAfterEllipsis
   * @return capitalizeAfterEllipsis
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getCapitalizeAfterEllipsis() {
    return capitalizeAfterEllipsis;
  }

  public void setCapitalizeAfterEllipsis(Boolean capitalizeAfterEllipsis) {
    this.capitalizeAfterEllipsis = capitalizeAfterEllipsis;
  }

  public HyphenStylesConfigDto dashStyle(DashStyleEnum dashStyle) {
    this.dashStyle = dashStyle;
    return this;
  }

   /**
   * Get dashStyle
   * @return dashStyle
  **/
  @ApiModelProperty(example = "null", value = "")
  public DashStyleEnum getDashStyle() {
    return dashStyle;
  }

  public void setDashStyle(DashStyleEnum dashStyle) {
    this.dashStyle = dashStyle;
  }

  public HyphenStylesConfigDto id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public HyphenStylesConfigDto spaceAfterEllipsis(Boolean spaceAfterEllipsis) {
    this.spaceAfterEllipsis = spaceAfterEllipsis;
    return this;
  }

   /**
   * Get spaceAfterEllipsis
   * @return spaceAfterEllipsis
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getSpaceAfterEllipsis() {
    return spaceAfterEllipsis;
  }

  public void setSpaceAfterEllipsis(Boolean spaceAfterEllipsis) {
    this.spaceAfterEllipsis = spaceAfterEllipsis;
  }

  public HyphenStylesConfigDto spaceBeforeEllipsis(Boolean spaceBeforeEllipsis) {
    this.spaceBeforeEllipsis = spaceBeforeEllipsis;
    return this;
  }

   /**
   * Get spaceBeforeEllipsis
   * @return spaceBeforeEllipsis
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getSpaceBeforeEllipsis() {
    return spaceBeforeEllipsis;
  }

  public void setSpaceBeforeEllipsis(Boolean spaceBeforeEllipsis) {
    this.spaceBeforeEllipsis = spaceBeforeEllipsis;
  }

  public HyphenStylesConfigDto useCurlyApostrophes(Boolean useCurlyApostrophes) {
    this.useCurlyApostrophes = useCurlyApostrophes;
    return this;
  }

   /**
   * Get useCurlyApostrophes
   * @return useCurlyApostrophes
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getUseCurlyApostrophes() {
    return useCurlyApostrophes;
  }

  public void setUseCurlyApostrophes(Boolean useCurlyApostrophes) {
    this.useCurlyApostrophes = useCurlyApostrophes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HyphenStylesConfigDto hyphenStylesConfigDto = (HyphenStylesConfigDto) o;
    return Objects.equals(this.capitalizeAfterColon, hyphenStylesConfigDto.capitalizeAfterColon) &&
        Objects.equals(this.capitalizeAfterDash, hyphenStylesConfigDto.capitalizeAfterDash) &&
        Objects.equals(this.capitalizeAfterEllipsis, hyphenStylesConfigDto.capitalizeAfterEllipsis) &&
        Objects.equals(this.dashStyle, hyphenStylesConfigDto.dashStyle) &&
        Objects.equals(this.id, hyphenStylesConfigDto.id) &&
        Objects.equals(this.spaceAfterEllipsis, hyphenStylesConfigDto.spaceAfterEllipsis) &&
        Objects.equals(this.spaceBeforeEllipsis, hyphenStylesConfigDto.spaceBeforeEllipsis) &&
        Objects.equals(this.useCurlyApostrophes, hyphenStylesConfigDto.useCurlyApostrophes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(capitalizeAfterColon, capitalizeAfterDash, capitalizeAfterEllipsis, dashStyle, id, spaceAfterEllipsis, spaceBeforeEllipsis, useCurlyApostrophes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HyphenStylesConfigDto {\n");
    
    sb.append("    capitalizeAfterColon: ").append(toIndentedString(capitalizeAfterColon)).append("\n");
    sb.append("    capitalizeAfterDash: ").append(toIndentedString(capitalizeAfterDash)).append("\n");
    sb.append("    capitalizeAfterEllipsis: ").append(toIndentedString(capitalizeAfterEllipsis)).append("\n");
    sb.append("    dashStyle: ").append(toIndentedString(dashStyle)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    spaceAfterEllipsis: ").append(toIndentedString(spaceAfterEllipsis)).append("\n");
    sb.append("    spaceBeforeEllipsis: ").append(toIndentedString(spaceBeforeEllipsis)).append("\n");
    sb.append("    useCurlyApostrophes: ").append(toIndentedString(useCurlyApostrophes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

