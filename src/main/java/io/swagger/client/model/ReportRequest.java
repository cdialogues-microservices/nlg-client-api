/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;


/**
 * ReportRequest
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2025-04-29T18:38:19.753+06:00")
public class ReportRequest   {
  @SerializedName("endDate")
  private String endDate = null;

  @SerializedName("limit")
  private Integer limit = null;

  /**
   * Gets or Sets sortField
   */
  public enum SortFieldEnum {
    @SerializedName("conversion")
    CONVERSION("conversion"),
    
    @SerializedName("reportingDate")
    REPORTINGDATE("reportingDate");

    private String value;

    SortFieldEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("sortField")
  private SortFieldEnum sortField = null;

  @SerializedName("startDate")
  private String startDate = null;

  /**
   * Gets or Sets tagCategory
   */
  public enum TagCategoryEnum {
    @SerializedName("DEFAULT")
    DEFAULT("DEFAULT"),
    
    @SerializedName("INTENT")
    INTENT("INTENT");

    private String value;

    TagCategoryEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("tagCategory")
  private List<TagCategoryEnum> tagCategory = new ArrayList<TagCategoryEnum>();

  @SerializedName("tags")
  private List<String> tags = new ArrayList<String>();

  @SerializedName("teamOwnerShip")
  private List<String> teamOwnerShip = new ArrayList<String>();

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    @SerializedName("MESSAGE")
    MESSAGE("MESSAGE"),
    
    @SerializedName("SEGMENT")
    SEGMENT("SEGMENT");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  public ReportRequest endDate(String endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getEndDate() {
    return endDate;
  }

  public void setEndDate(String endDate) {
    this.endDate = endDate;
  }

  public ReportRequest limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Get limit
   * @return limit
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public ReportRequest sortField(SortFieldEnum sortField) {
    this.sortField = sortField;
    return this;
  }

   /**
   * Get sortField
   * @return sortField
  **/
  @ApiModelProperty(example = "null", value = "")
  public SortFieldEnum getSortField() {
    return sortField;
  }

  public void setSortField(SortFieldEnum sortField) {
    this.sortField = sortField;
  }

  public ReportRequest startDate(String startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getStartDate() {
    return startDate;
  }

  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }

  public ReportRequest tagCategory(List<TagCategoryEnum> tagCategory) {
    this.tagCategory = tagCategory;
    return this;
  }

  public ReportRequest addTagCategoryItem(TagCategoryEnum tagCategoryItem) {
    this.tagCategory.add(tagCategoryItem);
    return this;
  }

   /**
   * Get tagCategory
   * @return tagCategory
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<TagCategoryEnum> getTagCategory() {
    return tagCategory;
  }

  public void setTagCategory(List<TagCategoryEnum> tagCategory) {
    this.tagCategory = tagCategory;
  }

  public ReportRequest tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public ReportRequest addTagsItem(String tagsItem) {
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public ReportRequest teamOwnerShip(List<String> teamOwnerShip) {
    this.teamOwnerShip = teamOwnerShip;
    return this;
  }

  public ReportRequest addTeamOwnerShipItem(String teamOwnerShipItem) {
    this.teamOwnerShip.add(teamOwnerShipItem);
    return this;
  }

   /**
   * Get teamOwnerShip
   * @return teamOwnerShip
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getTeamOwnerShip() {
    return teamOwnerShip;
  }

  public void setTeamOwnerShip(List<String> teamOwnerShip) {
    this.teamOwnerShip = teamOwnerShip;
  }

  public ReportRequest type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(example = "null", value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportRequest reportRequest = (ReportRequest) o;
    return Objects.equals(this.endDate, reportRequest.endDate) &&
        Objects.equals(this.limit, reportRequest.limit) &&
        Objects.equals(this.sortField, reportRequest.sortField) &&
        Objects.equals(this.startDate, reportRequest.startDate) &&
        Objects.equals(this.tagCategory, reportRequest.tagCategory) &&
        Objects.equals(this.tags, reportRequest.tags) &&
        Objects.equals(this.teamOwnerShip, reportRequest.teamOwnerShip) &&
        Objects.equals(this.type, reportRequest.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endDate, limit, sortField, startDate, tagCategory, tags, teamOwnerShip, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportRequest {\n");
    
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    sortField: ").append(toIndentedString(sortField)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    tagCategory: ").append(toIndentedString(tagCategory)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    teamOwnerShip: ").append(toIndentedString(teamOwnerShip)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

