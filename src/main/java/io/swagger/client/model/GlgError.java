/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;


/**
 * GlgError
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2025-04-29T19:02:02.404+06:00")
public class GlgError {
  @SerializedName("error")
  private String error = null;

  @SerializedName("message")
  private String message = null;

  @SerializedName("messages")
  private List<String> messages = new ArrayList<String>();

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    @SerializedName("100 CONTINUE")
    _100_CONTINUE("100 CONTINUE"),
    
    @SerializedName("101 SWITCHING_PROTOCOLS")
    _101_SWITCHING_PROTOCOLS("101 SWITCHING_PROTOCOLS"),
    
    @SerializedName("102 PROCESSING")
    _102_PROCESSING("102 PROCESSING"),
    
    @SerializedName("103 CHECKPOINT")
    _103_CHECKPOINT("103 CHECKPOINT"),
    
    @SerializedName("200 OK")
    _200_OK("200 OK"),
    
    @SerializedName("201 CREATED")
    _201_CREATED("201 CREATED"),
    
    @SerializedName("202 ACCEPTED")
    _202_ACCEPTED("202 ACCEPTED"),
    
    @SerializedName("203 NON_AUTHORITATIVE_INFORMATION")
    _203_NON_AUTHORITATIVE_INFORMATION("203 NON_AUTHORITATIVE_INFORMATION"),
    
    @SerializedName("204 NO_CONTENT")
    _204_NO_CONTENT("204 NO_CONTENT"),
    
    @SerializedName("205 RESET_CONTENT")
    _205_RESET_CONTENT("205 RESET_CONTENT"),
    
    @SerializedName("206 PARTIAL_CONTENT")
    _206_PARTIAL_CONTENT("206 PARTIAL_CONTENT"),
    
    @SerializedName("207 MULTI_STATUS")
    _207_MULTI_STATUS("207 MULTI_STATUS"),
    
    @SerializedName("208 ALREADY_REPORTED")
    _208_ALREADY_REPORTED("208 ALREADY_REPORTED"),
    
    @SerializedName("226 IM_USED")
    _226_IM_USED("226 IM_USED"),
    
    @SerializedName("300 MULTIPLE_CHOICES")
    _300_MULTIPLE_CHOICES("300 MULTIPLE_CHOICES"),
    
    @SerializedName("301 MOVED_PERMANENTLY")
    _301_MOVED_PERMANENTLY("301 MOVED_PERMANENTLY"),
    
    @SerializedName("302 FOUND")
    _302_FOUND("302 FOUND"),
    
    @SerializedName("302 MOVED_TEMPORARILY")
    _302_MOVED_TEMPORARILY("302 MOVED_TEMPORARILY"),
    
    @SerializedName("303 SEE_OTHER")
    _303_SEE_OTHER("303 SEE_OTHER"),
    
    @SerializedName("304 NOT_MODIFIED")
    _304_NOT_MODIFIED("304 NOT_MODIFIED"),
    
    @SerializedName("305 USE_PROXY")
    _305_USE_PROXY("305 USE_PROXY"),
    
    @SerializedName("307 TEMPORARY_REDIRECT")
    _307_TEMPORARY_REDIRECT("307 TEMPORARY_REDIRECT"),
    
    @SerializedName("308 PERMANENT_REDIRECT")
    _308_PERMANENT_REDIRECT("308 PERMANENT_REDIRECT"),
    
    @SerializedName("400 BAD_REQUEST")
    _400_BAD_REQUEST("400 BAD_REQUEST"),
    
    @SerializedName("401 UNAUTHORIZED")
    _401_UNAUTHORIZED("401 UNAUTHORIZED"),
    
    @SerializedName("402 PAYMENT_REQUIRED")
    _402_PAYMENT_REQUIRED("402 PAYMENT_REQUIRED"),
    
    @SerializedName("403 FORBIDDEN")
    _403_FORBIDDEN("403 FORBIDDEN"),
    
    @SerializedName("404 NOT_FOUND")
    _404_NOT_FOUND("404 NOT_FOUND"),
    
    @SerializedName("405 METHOD_NOT_ALLOWED")
    _405_METHOD_NOT_ALLOWED("405 METHOD_NOT_ALLOWED"),
    
    @SerializedName("406 NOT_ACCEPTABLE")
    _406_NOT_ACCEPTABLE("406 NOT_ACCEPTABLE"),
    
    @SerializedName("407 PROXY_AUTHENTICATION_REQUIRED")
    _407_PROXY_AUTHENTICATION_REQUIRED("407 PROXY_AUTHENTICATION_REQUIRED"),
    
    @SerializedName("408 REQUEST_TIMEOUT")
    _408_REQUEST_TIMEOUT("408 REQUEST_TIMEOUT"),
    
    @SerializedName("409 CONFLICT")
    _409_CONFLICT("409 CONFLICT"),
    
    @SerializedName("410 GONE")
    _410_GONE("410 GONE"),
    
    @SerializedName("411 LENGTH_REQUIRED")
    _411_LENGTH_REQUIRED("411 LENGTH_REQUIRED"),
    
    @SerializedName("412 PRECONDITION_FAILED")
    _412_PRECONDITION_FAILED("412 PRECONDITION_FAILED"),
    
    @SerializedName("413 PAYLOAD_TOO_LARGE")
    _413_PAYLOAD_TOO_LARGE("413 PAYLOAD_TOO_LARGE"),
    
    @SerializedName("413 REQUEST_ENTITY_TOO_LARGE")
    _413_REQUEST_ENTITY_TOO_LARGE("413 REQUEST_ENTITY_TOO_LARGE"),
    
    @SerializedName("414 URI_TOO_LONG")
    _414_URI_TOO_LONG("414 URI_TOO_LONG"),
    
    @SerializedName("414 REQUEST_URI_TOO_LONG")
    _414_REQUEST_URI_TOO_LONG("414 REQUEST_URI_TOO_LONG"),
    
    @SerializedName("415 UNSUPPORTED_MEDIA_TYPE")
    _415_UNSUPPORTED_MEDIA_TYPE("415 UNSUPPORTED_MEDIA_TYPE"),
    
    @SerializedName("416 REQUESTED_RANGE_NOT_SATISFIABLE")
    _416_REQUESTED_RANGE_NOT_SATISFIABLE("416 REQUESTED_RANGE_NOT_SATISFIABLE"),
    
    @SerializedName("417 EXPECTATION_FAILED")
    _417_EXPECTATION_FAILED("417 EXPECTATION_FAILED"),
    
    @SerializedName("418 I_AM_A_TEAPOT")
    _418_I_AM_A_TEAPOT("418 I_AM_A_TEAPOT"),
    
    @SerializedName("419 INSUFFICIENT_SPACE_ON_RESOURCE")
    _419_INSUFFICIENT_SPACE_ON_RESOURCE("419 INSUFFICIENT_SPACE_ON_RESOURCE"),
    
    @SerializedName("420 METHOD_FAILURE")
    _420_METHOD_FAILURE("420 METHOD_FAILURE"),
    
    @SerializedName("421 DESTINATION_LOCKED")
    _421_DESTINATION_LOCKED("421 DESTINATION_LOCKED"),
    
    @SerializedName("422 UNPROCESSABLE_ENTITY")
    _422_UNPROCESSABLE_ENTITY("422 UNPROCESSABLE_ENTITY"),
    
    @SerializedName("423 LOCKED")
    _423_LOCKED("423 LOCKED"),
    
    @SerializedName("424 FAILED_DEPENDENCY")
    _424_FAILED_DEPENDENCY("424 FAILED_DEPENDENCY"),
    
    @SerializedName("425 TOO_EARLY")
    _425_TOO_EARLY("425 TOO_EARLY"),
    
    @SerializedName("426 UPGRADE_REQUIRED")
    _426_UPGRADE_REQUIRED("426 UPGRADE_REQUIRED"),
    
    @SerializedName("428 PRECONDITION_REQUIRED")
    _428_PRECONDITION_REQUIRED("428 PRECONDITION_REQUIRED"),
    
    @SerializedName("429 TOO_MANY_REQUESTS")
    _429_TOO_MANY_REQUESTS("429 TOO_MANY_REQUESTS"),
    
    @SerializedName("431 REQUEST_HEADER_FIELDS_TOO_LARGE")
    _431_REQUEST_HEADER_FIELDS_TOO_LARGE("431 REQUEST_HEADER_FIELDS_TOO_LARGE"),
    
    @SerializedName("451 UNAVAILABLE_FOR_LEGAL_REASONS")
    _451_UNAVAILABLE_FOR_LEGAL_REASONS("451 UNAVAILABLE_FOR_LEGAL_REASONS"),
    
    @SerializedName("500 INTERNAL_SERVER_ERROR")
    _500_INTERNAL_SERVER_ERROR("500 INTERNAL_SERVER_ERROR"),
    
    @SerializedName("501 NOT_IMPLEMENTED")
    _501_NOT_IMPLEMENTED("501 NOT_IMPLEMENTED"),
    
    @SerializedName("502 BAD_GATEWAY")
    _502_BAD_GATEWAY("502 BAD_GATEWAY"),
    
    @SerializedName("503 SERVICE_UNAVAILABLE")
    _503_SERVICE_UNAVAILABLE("503 SERVICE_UNAVAILABLE"),
    
    @SerializedName("504 GATEWAY_TIMEOUT")
    _504_GATEWAY_TIMEOUT("504 GATEWAY_TIMEOUT"),
    
    @SerializedName("505 HTTP_VERSION_NOT_SUPPORTED")
    _505_HTTP_VERSION_NOT_SUPPORTED("505 HTTP_VERSION_NOT_SUPPORTED"),
    
    @SerializedName("506 VARIANT_ALSO_NEGOTIATES")
    _506_VARIANT_ALSO_NEGOTIATES("506 VARIANT_ALSO_NEGOTIATES"),
    
    @SerializedName("507 INSUFFICIENT_STORAGE")
    _507_INSUFFICIENT_STORAGE("507 INSUFFICIENT_STORAGE"),
    
    @SerializedName("508 LOOP_DETECTED")
    _508_LOOP_DETECTED("508 LOOP_DETECTED"),
    
    @SerializedName("509 BANDWIDTH_LIMIT_EXCEEDED")
    _509_BANDWIDTH_LIMIT_EXCEEDED("509 BANDWIDTH_LIMIT_EXCEEDED"),
    
    @SerializedName("510 NOT_EXTENDED")
    _510_NOT_EXTENDED("510 NOT_EXTENDED"),
    
    @SerializedName("511 NETWORK_AUTHENTICATION_REQUIRED")
    _511_NETWORK_AUTHENTICATION_REQUIRED("511 NETWORK_AUTHENTICATION_REQUIRED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("timestamp")
  private String timestamp = null;

  public GlgError error(String error) {
    this.error = error;
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getError() {
    return error;
  }

  public void setError(String error) {
    this.error = error;
  }

  public GlgError message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public GlgError messages(List<String> messages) {
    this.messages = messages;
    return this;
  }

  public GlgError addMessagesItem(String messagesItem) {
    this.messages.add(messagesItem);
    return this;
  }

   /**
   * Get messages
   * @return messages
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getMessages() {
    return messages;
  }

  public void setMessages(List<String> messages) {
    this.messages = messages;
  }

  public GlgError status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(example = "null", value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public GlgError timestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GlgError glgError = (GlgError) o;
    return Objects.equals(this.error, glgError.error) &&
        Objects.equals(this.message, glgError.message) &&
        Objects.equals(this.messages, glgError.messages) &&
        Objects.equals(this.status, glgError.status) &&
        Objects.equals(this.timestamp, glgError.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(error, message, messages, status, timestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GlgError {\n");
    
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

