/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * Tag
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2025-04-29T18:38:19.753+06:00")
public class Tag   {
  @SerializedName("global")
  private Boolean global = null;

  @SerializedName("id")
  private Long id = null;

  /**
   * Gets or Sets tagCategory
   */
  public enum TagCategoryEnum {
    @SerializedName("DEFAULT")
    DEFAULT("DEFAULT"),
    
    @SerializedName("INTENT")
    INTENT("INTENT");

    private String value;

    TagCategoryEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("tagCategory")
  private TagCategoryEnum tagCategory = null;

  @SerializedName("tagName")
  private String tagName = null;

  /**
   * Gets or Sets tagType
   */
  public enum TagTypeEnum {
    @SerializedName("MESSAGE")
    MESSAGE("MESSAGE"),
    
    @SerializedName("MESSAGE_PART")
    MESSAGE_PART("MESSAGE_PART"),
    
    @SerializedName("GLOBAL_MESSAGE")
    GLOBAL_MESSAGE("GLOBAL_MESSAGE"),
    
    @SerializedName("GLOBAL_MESSAGE_PART")
    GLOBAL_MESSAGE_PART("GLOBAL_MESSAGE_PART"),
    
    @SerializedName("POS_RICH")
    POS_RICH("POS_RICH");

    private String value;

    TagTypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("tagType")
  private TagTypeEnum tagType = null;

  @SerializedName("teamOwnership")
  private String teamOwnership = null;

  public Tag global(Boolean global) {
    this.global = global;
    return this;
  }

   /**
   * Get global
   * @return global
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getGlobal() {
    return global;
  }

  public void setGlobal(Boolean global) {
    this.global = global;
  }

  public Tag id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Tag tagCategory(TagCategoryEnum tagCategory) {
    this.tagCategory = tagCategory;
    return this;
  }

   /**
   * Get tagCategory
   * @return tagCategory
  **/
  @ApiModelProperty(example = "null", value = "")
  public TagCategoryEnum getTagCategory() {
    return tagCategory;
  }

  public void setTagCategory(TagCategoryEnum tagCategory) {
    this.tagCategory = tagCategory;
  }

  public Tag tagName(String tagName) {
    this.tagName = tagName;
    return this;
  }

   /**
   * Get tagName
   * @return tagName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getTagName() {
    return tagName;
  }

  public void setTagName(String tagName) {
    this.tagName = tagName;
  }

  public Tag tagType(TagTypeEnum tagType) {
    this.tagType = tagType;
    return this;
  }

   /**
   * Get tagType
   * @return tagType
  **/
  @ApiModelProperty(example = "null", value = "")
  public TagTypeEnum getTagType() {
    return tagType;
  }

  public void setTagType(TagTypeEnum tagType) {
    this.tagType = tagType;
  }

  public Tag teamOwnership(String teamOwnership) {
    this.teamOwnership = teamOwnership;
    return this;
  }

   /**
   * Get teamOwnership
   * @return teamOwnership
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getTeamOwnership() {
    return teamOwnership;
  }

  public void setTeamOwnership(String teamOwnership) {
    this.teamOwnership = teamOwnership;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Tag tag = (Tag) o;
    return Objects.equals(this.global, tag.global) &&
        Objects.equals(this.id, tag.id) &&
        Objects.equals(this.tagCategory, tag.tagCategory) &&
        Objects.equals(this.tagName, tag.tagName) &&
        Objects.equals(this.tagType, tag.tagType) &&
        Objects.equals(this.teamOwnership, tag.teamOwnership);
  }

  @Override
  public int hashCode() {
    return Objects.hash(global, id, tagCategory, tagName, tagType, teamOwnership);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Tag {\n");
    
    sb.append("    global: ").append(toIndentedString(global)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    tagCategory: ").append(toIndentedString(tagCategory)).append("\n");
    sb.append("    tagName: ").append(toIndentedString(tagName)).append("\n");
    sb.append("    tagType: ").append(toIndentedString(tagType)).append("\n");
    sb.append("    teamOwnership: ").append(toIndentedString(teamOwnership)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

