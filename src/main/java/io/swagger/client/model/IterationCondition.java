/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * IterationCondition
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2024-09-16T11:21:22.833+06:00")
public class IterationCondition   {
  @SerializedName("isBothConditions")
  private Boolean isBothConditions = null;

  @SerializedName("iterationDuration")
  private Integer iterationDuration = null;

  @SerializedName("iterationResponses")
  private Integer iterationResponses = null;

  public IterationCondition isBothConditions(Boolean isBothConditions) {
    this.isBothConditions = isBothConditions;
    return this;
  }

   /**
   * Get isBothConditions
   * @return isBothConditions
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsBothConditions() {
    return isBothConditions;
  }

  public void setIsBothConditions(Boolean isBothConditions) {
    this.isBothConditions = isBothConditions;
  }

  public IterationCondition iterationDuration(Integer iterationDuration) {
    this.iterationDuration = iterationDuration;
    return this;
  }

   /**
   * Get iterationDuration
   * @return iterationDuration
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getIterationDuration() {
    return iterationDuration;
  }

  public void setIterationDuration(Integer iterationDuration) {
    this.iterationDuration = iterationDuration;
  }

  public IterationCondition iterationResponses(Integer iterationResponses) {
    this.iterationResponses = iterationResponses;
    return this;
  }

   /**
   * Get iterationResponses
   * @return iterationResponses
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getIterationResponses() {
    return iterationResponses;
  }

  public void setIterationResponses(Integer iterationResponses) {
    this.iterationResponses = iterationResponses;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IterationCondition iterationCondition = (IterationCondition) o;
    return Objects.equals(this.isBothConditions, iterationCondition.isBothConditions) &&
        Objects.equals(this.iterationDuration, iterationCondition.iterationDuration) &&
        Objects.equals(this.iterationResponses, iterationCondition.iterationResponses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isBothConditions, iterationDuration, iterationResponses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IterationCondition {\n");
    
    sb.append("    isBothConditions: ").append(toIndentedString(isBothConditions)).append("\n");
    sb.append("    iterationDuration: ").append(toIndentedString(iterationDuration)).append("\n");
    sb.append("    iterationResponses: ").append(toIndentedString(iterationResponses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

